name: Gradle CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push and pull request events but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  BUILD_OUTPUT: 'build/libs'

jobs:

  build:

    name: Gradle-Build
    
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
      
      # Setup JDK
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11
      
      # Validate Gradle Wrapper
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.3
        
      # Build
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew build -x test

      # Prerelease
      - name: Generate Prerelease Release Notes
        run: |
          echo '### Disclaimer:' >> ReleaseNotes.md
          echo '***This alpha version is for testing only.***' >> ReleaseNotes.md
          echo 'It is not ready for daily use and we do not guarantee its usability.' >> ReleaseNotes.md
          echo '### The latest five updates are:' >> ReleaseNotes.md
          git log -"5" --format="- %H %s" | sed '/^$/d' >> ReleaseNotes.md

      - name: Delete Old Prerelease
        uses: dev-drprasad/delete-tag-and-release@v0.1.2
        with:
          tag_name: alpha
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish GitHub Release
        uses: ncipollo/release-action@v1
        with:
          prerelease: true
          bodyFile: ReleaseNotes.md
          artifacts: "${{ env.BUILD_OUTPUT }}/*.jar"
          tag: "alpha"
          token: ${{ secrets.GITHUB_TOKEN }}